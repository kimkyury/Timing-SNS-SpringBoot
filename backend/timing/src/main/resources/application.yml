spring:
  profiles:
    group:
      "local": "local"
      "dev": "dev"
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - account_email

springdoc:
  packages-to-scan: com.kkukku.timing.apis
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
cloud:
  aws:
    credentials:
      access-key: ${AWS_S3_ACCESS_KEY}
      secret-key: ${AWS_S3_SECRET_KEY}
    region:
      static: ${AWS_S3_REGION}
    s3:
      bucket: ${AWS_S3_BUCKET}
application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      access-token:
        expiration: 900
      refresh-token:
        expiration: 604800
    cors:
      domain: ${FRONT_DOMAIN_URI}

---
spring:
  config:
    activate:
      on-profile: "local"
  datasource:
    driver-class-name: org.h2.Driver
    url: 'jdbc:h2:mem:test'
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update # data.sql내용 유지, JPA Entity와 일치하도록 만듦
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        show_sql: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: ${LOCAL_KAKAO_REDIRECT_URI}
  redis:
    host: ${LOCAL_REDIS_HOST}
    port: ${LOCAL_REDIS_PORT}
    password: ${LOCAL_REDIS_PASSWORD}

---
spring:
  config:
    activate:
      on-profile: "dev"
  datasource:
    url: ${MARIADB_URL}
    username: ${MARIADB_USERNAME}
    password: ${MARIADB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    generate-ddl: false
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: ${KAKAO_REDIRECT_URI}
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}